version: "3.8"

networks:
  filebundleuploadernetwork:
    name: filebundleuploadernetwork
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.19.0.0/16"
          gateway: "172.19.0.1"

services:
  elasticsearch:
    image: elasticsearch:8.14.1
    container_name: filebundleuploadeelasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      ELASTIC_PASSWORD: elastic
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearchdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    restart: always
    networks:
      - filebundleuploadernetwork

  db:
    image: postgres:16
    container_name: filebundleuploaderdatabase
    volumes:
      - filebundleuploaderdata:/var/lib/postgresql/data/
    env_file: ./env/db.env
    restart: always
    networks:
      - filebundleuploadernetwork

  redis:
    image: redis:latest
    container_name: filebundleuploaderredis
    restart: always
    networks:
      - filebundleuploadernetwork

  backend:
    build: ./backend
    container_name: filebundleuploaderbackend
    env_file: ./env/backend.env
    volumes:
      - ./backend/:/code/backend/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - elasticsearch
      - minio
    restart: always
    networks:
      - filebundleuploadernetwork

  celery_worker:
    build: ./backend
    container_name: filebundleuploaderceleryworker
    env_file: ./env/backend.env
    volumes:
      - ./backend/:/code/backend/
    ports:
      - "8001:8001"
    depends_on:
      - backend
      - minio
      - db
      - redis
      - elasticsearch
    entrypoint: scripts/celery_entrypoint.sh
    restart: always
    networks:
      - filebundleuploadernetwork
  
  minio:
    image: minio/minio
    container_name: filebundleuploaderminio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: filebundleuploader
      MINIO_ROOT_PASSWORD: filebundleuploader
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data
    restart: always
    networks:
      - filebundleuploadernetwork

volumes:
  elasticsearchdata:
  filebundleuploaderdata:
  miniodata:
